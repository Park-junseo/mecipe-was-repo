version: '3.8'

services:
  # NestJS 애플리케이션
  app:
    build:
      context: ./mecipe-was
      dockerfile: Dockerfile
    container_name: mecipe-app
    restart: unless-stopped
    ports:
      - "${PORT:-4000}:${PORT:-4000}"
      - "${SOCKET_PORT:-4100}:${SOCKET_PORT:-4100}"
    environment:
      # Application
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-4000}
      - SOCKET_PORT=${SOCKET_PORT:-4100}
      
      # Database
      - DATABASE_URL=${DATABASE_URL}
      
      # JWT & Auth
      - JWT_SECRET=${JWT_SECRET}
      - SECRET_LOGIN_CRYPTO=${SECRET_LOGIN_CRYPTO}
      
      # API Keys
      - API_KEY=${API_KEY}
      - BUILD_API_KEY=${BUILD_API_KEY}
      
      # Secret Keys
      - COUPON_SECRET=${COUPON_SECRET}
      - PRODUCT_SECRET=${PRODUCT_SECRET}
    volumes:
      - ./mecipe-was/media:/app/media
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT:-4000}/hello', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 리버스 프록시
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: mecipe-nginx
    restart: unless-stopped
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - APP_PORT=${PORT:-4000}
      - SOCKET_PORT=${SOCKET_PORT:-4100}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./mecipe-was/media:/var/www/media:ro
    networks:
      - app-network
    depends_on:
      - app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot (Let's Encrypt SSL 인증서)
  certbot:
    image: certbot/certbot
    container_name: mecipe-certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

