name: Deploy via SSH (Docker Compose)

# SSH를 통해 원격 서버에 배포하는 워크플로우
# Self-hosted runner가 없을 때 사용

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  # 🧪 1. 테스트 및 빌드 검증
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mecipe-was/package-lock.json

      - name: Install dependencies
        working-directory: ./mecipe-was
        run: npm ci

      - name: Generate Prisma Client
        working-directory: ./mecipe-was
        run: npx prisma generate

      - name: Run linter
        working-directory: ./mecipe-was
        run: npm run lint

      - name: Run tests
        working-directory: ./mecipe-was
        run: npm test

      - name: Build application
        working-directory: ./mecipe-was
        run: npm run build

  # 🚀 2. 원격 서버에 배포
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          cat > .env << 'EOF'
          NODE_ENV=production
          PORT=${{ secrets.PORT || 4000 }}
          DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
          SSL_EMAIL=${{ secrets.SSL_EMAIL }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          API_KEY=${{ secrets.API_KEY }}
          EOF

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "docker-compose.yml,nginx/*,scripts/*,.env,mecipe-was/Dockerfile,mecipe-was/package*.json,mecipe-was/prisma/*,mecipe-was/src/*,mecipe-was/tsconfig*.json,mecipe-was/nest-cli.json"
          target: "/app/mecipe-was"
          strip_components: 0

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            cd /app/mecipe-was
            
            # 환경 변수 파일 확인
            if [ ! -f .env ]; then
              echo "Error: .env file not found!"
              exit 1
            fi
            
            # Docker Compose로 서비스 중지
            docker compose down
            
            # 이전 이미지 정리
            docker image prune -f
            
            # 새로운 컨테이너 빌드 및 시작
            docker compose build --no-cache
            docker compose up -d
            
            # 헬스체크 대기
            echo "Waiting for services to be healthy..."
            sleep 30
            
            # 마이그레이션 실행
            docker compose exec -T app npx prisma migrate deploy
            
            # 서비스 상태 확인
            docker compose ps
            
            # 애플리케이션 상태 확인
            if docker compose ps | grep -q "Up"; then
              echo "✅ Deployment successful!"
            else
              echo "❌ Deployment failed!"
              docker compose logs --tail=100
              exit 1
            fi

